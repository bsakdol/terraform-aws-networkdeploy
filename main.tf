# ------------------------------------------------------------------------------
# Automatically generated file
# ------------------------------------------------------------------------------
# Any manual changes to this file will be overwritten the next time it is
# generated by running `./setup.py`

# ------------------------------------------------------------------------------
# Get account information for the default provider in the main region
# ------------------------------------------------------------------------------
data "aws_caller_identity" "this" {
  provider = aws.oregon
}

# ------------------------------------------------------------------------------
# Generate default tags for all resources
# ------------------------------------------------------------------------------
locals {
  default_tags = merge(
    var.tags,
    { Terraform = "true" }
  )
}

# ------------------------------------------------------------------------------
# AWS | Network Manager | --> Create global network
# ------------------------------------------------------------------------------
resource "aws_networkmanager_global_network" "this" {
  count    = var.deploy_network_manager ? 1 : 0
  provider = aws.oregon

  description = "Network Manager"

  tags = merge(
    local.default_tags,
    { Name = "turnitin_aws_global_network" }
  )
}

# ------------------------------------------------------------------------------
# AWS | Transit Gateway | --> Deploy Transit Gateways
# ------------------------------------------------------------------------------

# REGION: CANADA (CA-CENTRAL-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_canada" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.canada ? 1 : 0
  providers = { aws = aws.canada }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.canada
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "canada" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_canada" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.canada ? 1 : 0
  provider = aws.canada

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_canada[0].arn
}

# REGION: FRANKFURT (EU-CENTRAL-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_frankfurt" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.frankfurt ? 1 : 0
  providers = { aws = aws.frankfurt }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.frankfurt
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "frankfurt" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_frankfurt" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.frankfurt ? 1 : 0
  provider = aws.frankfurt

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_frankfurt[0].arn
}

# REGION: IRELAND (EU-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_ireland" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.ireland ? 1 : 0
  providers = { aws = aws.ireland }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.ireland
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "ireland" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_ireland" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.ireland ? 1 : 0
  provider = aws.ireland

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_ireland[0].arn
}

# REGION: LONDON (EU-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_deployment_london" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.london ? 1 : 0
  providers = { aws = aws.london }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.london
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "london" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_london" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.london ? 1 : 0
  provider = aws.london

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_london[0].arn
}

# REGION: MUMBAI (AP-SOUTH-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_mumbai" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.mumbai ? 1 : 0
  providers = { aws = aws.mumbai }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.mumbai
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "mumbai" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_mumbai" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.mumbai ? 1 : 0
  provider = aws.mumbai

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_mumbai[0].arn
}

# REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_n_california" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.n_california ? 1 : 0
  providers = { aws = aws.n_california }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.n_california
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "n_california" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_n_california" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.n_california ? 1 : 0
  provider = aws.n_california

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_n_california[0].arn
}

# REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_n_virginia" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.n_virginia ? 1 : 0
  providers = { aws = aws.n_virginia }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.n_virginia
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "n_virginia" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_n_virginia" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.n_virginia ? 1 : 0
  provider = aws.n_virginia

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_n_virginia[0].arn
}

# REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_deployment_ohio" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.ohio ? 1 : 0
  providers = { aws = aws.ohio }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.ohio
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "ohio" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_ohio" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.ohio ? 1 : 0
  provider = aws.ohio

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_ohio[0].arn
}

# REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_deployment_oregon" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.oregon ? 1 : 0
  providers = { aws = aws.oregon }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.oregon
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "oregon" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_oregon" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.oregon ? 1 : 0
  provider = aws.oregon

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_oregon[0].arn
}

# REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_deployment_osaka" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.osaka ? 1 : 0
  providers = { aws = aws.osaka }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.osaka
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "osaka" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_osaka" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.osaka ? 1 : 0
  provider = aws.osaka

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_osaka[0].arn
}

# REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_deployment_paris" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.paris ? 1 : 0
  providers = { aws = aws.paris }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.paris
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "paris" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_paris" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.paris ? 1 : 0
  provider = aws.paris

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_paris[0].arn
}

# REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_sao_paulo" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.sao_paulo ? 1 : 0
  providers = { aws = aws.sao_paulo }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.sao_paulo
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "sao_paulo" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_sao_paulo" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.sao_paulo ? 1 : 0
  provider = aws.sao_paulo

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_sao_paulo[0].arn
}

# REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_deployment_seoul" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.seoul ? 1 : 0
  providers = { aws = aws.seoul }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.seoul
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "seoul" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_seoul" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.seoul ? 1 : 0
  provider = aws.seoul

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_seoul[0].arn
}

# REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_singapore" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.singapore ? 1 : 0
  providers = { aws = aws.singapore }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.singapore
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "singapore" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_singapore" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.singapore ? 1 : 0
  provider = aws.singapore

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_singapore[0].arn
}

# REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_stockholm" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.stockholm ? 1 : 0
  providers = { aws = aws.stockholm }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.stockholm
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "stockholm" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_stockholm" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.stockholm ? 1 : 0
  provider = aws.stockholm

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_stockholm[0].arn
}

# REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_deployment_sydney" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.sydney ? 1 : 0
  providers = { aws = aws.sydney }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.sydney
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "sydney" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_sydney" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.sydney ? 1 : 0
  provider = aws.sydney

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_sydney[0].arn
}

# REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_deployment_tokyo" {
  source    = "./modules/transit_gateway"
  count     = var.deploy_in_region.all_regions || var.deploy_in_region.tokyo ? 1 : 0
  providers = { aws = aws.tokyo }

  amazon_side_asn                 = var.transit_gateway_bgp_asn.tokyo
  auto_accept_shared_attachments  = true
  default_route_table_association = false
  default_route_table_propagation = false
  dns_support                     = true
  multicast_support               = false
  vpn_ecmp_support                = true

  tags = merge(
    local.default_tags,
    { Name = "tokyo" }
  )
}

# Register the Transit Gateway with Global Network Manager
resource "aws_networkmanager_transit_gateway_registration" "tgw_deployment_tokyo" {
  count    = var.deploy_in_region.all_regions || var.deploy_in_region.tokyo ? 1 : 0
  provider = aws.tokyo

  global_network_id   = aws_networkmanager_global_network.this[0].id
  transit_gateway_arn = module.tgw_deployment_tokyo[0].arn
}

# ------------------------------------------------------------------------------
# AWS | Transit Gateway | --> Peer Transit Gateways
# ------------------------------------------------------------------------------

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: FRANKFURT (EU-CENTRAL-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_frankfurt" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.frankfurt)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_frankfurt) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_frankfurt"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-central-1"
  peer_transit_gateway_id = module.tgw_deployment_frankfurt[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_frankfurt_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.frankfurt)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_frankfurt) ? 1 : 0
  provider = aws.frankfurt

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_frankfurt[0].id

  tags = { Name = "frankfurt_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: IRELAND (EU-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_ireland" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.ireland)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_ireland) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_ireland"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-1"
  peer_transit_gateway_id = module.tgw_deployment_ireland[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_ireland_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.ireland)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_ireland) ? 1 : 0
  provider = aws.ireland

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_ireland[0].id

  tags = { Name = "ireland_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: LONDON (EU-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_london" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_london) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_london"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-2"
  peer_transit_gateway_id = module.tgw_deployment_london[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_london_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_london) ? 1 : 0
  provider = aws.london

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_london[0].id

  tags = { Name = "london_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: MUMBAI (AP-SOUTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_mumbai" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_mumbai) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_mumbai"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-south-1"
  peer_transit_gateway_id = module.tgw_deployment_mumbai[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_mumbai_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_mumbai) ? 1 : 0
  provider = aws.mumbai

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_mumbai[0].id

  tags = { Name = "mumbai_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_n_california" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_n_california) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_n_california"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-1"
  peer_transit_gateway_id = module.tgw_deployment_n_california[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_n_california_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_n_california) ? 1 : 0
  provider = aws.n_california

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_n_california[0].id

  tags = { Name = "n_california_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_n_virginia) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_ohio) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_ohio[0].id

  tags = { Name = "ohio_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_oregon) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_oregon[0].id

  tags = { Name = "oregon_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_osaka) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_osaka[0].id

  tags = { Name = "osaka_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_paris) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_paris[0].id

  tags = { Name = "paris_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_seoul) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_seoul[0].id

  tags = { Name = "seoul_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_singapore) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_singapore[0].id

  tags = { Name = "singapore_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_stockholm) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_stockholm[0].id

  tags = { Name = "stockholm_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_sydney) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_sydney[0].id

  tags = { Name = "sydney_to_canada" }
}

# REQUESTER REGION: CANADA (CA-CENTRAL-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_canada_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_tokyo) ? 1 : 0
  providers = { aws = aws.canada }

  name = "canada_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_canada[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_canada_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.canada && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.canada_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_canada_to_tokyo[0].id

  tags = { Name = "tokyo_to_canada" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: IRELAND (EU-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_ireland" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.ireland)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_ireland) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_ireland"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-1"
  peer_transit_gateway_id = module.tgw_deployment_ireland[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_ireland_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.ireland)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_ireland) ? 1 : 0
  provider = aws.ireland

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_ireland[0].id

  tags = { Name = "ireland_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: LONDON (EU-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_london" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_london) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_london"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-2"
  peer_transit_gateway_id = module.tgw_deployment_london[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_london_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_london) ? 1 : 0
  provider = aws.london

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_london[0].id

  tags = { Name = "london_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: MUMBAI (AP-SOUTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_mumbai" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_mumbai) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_mumbai"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-south-1"
  peer_transit_gateway_id = module.tgw_deployment_mumbai[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_mumbai_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_mumbai) ? 1 : 0
  provider = aws.mumbai

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_mumbai[0].id

  tags = { Name = "mumbai_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_n_california" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_n_california) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_n_california"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-1"
  peer_transit_gateway_id = module.tgw_deployment_n_california[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_n_california_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_n_california) ? 1 : 0
  provider = aws.n_california

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_n_california[0].id

  tags = { Name = "n_california_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_n_virginia) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_ohio) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_ohio[0].id

  tags = { Name = "ohio_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_oregon) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_oregon[0].id

  tags = { Name = "oregon_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_osaka) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_osaka[0].id

  tags = { Name = "osaka_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_paris) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_paris[0].id

  tags = { Name = "paris_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_seoul) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_seoul[0].id

  tags = { Name = "seoul_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_singapore) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_singapore[0].id

  tags = { Name = "singapore_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_stockholm) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_stockholm[0].id

  tags = { Name = "stockholm_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_sydney) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_sydney[0].id

  tags = { Name = "sydney_to_frankfurt" }
}

# REQUESTER REGION: FRANKFURT (EU-CENTRAL-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_frankfurt_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_tokyo) ? 1 : 0
  providers = { aws = aws.frankfurt }

  name = "frankfurt_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_frankfurt[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_frankfurt_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.frankfurt && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.frankfurt_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_frankfurt_to_tokyo[0].id

  tags = { Name = "tokyo_to_frankfurt" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: LONDON (EU-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_london" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_london) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_london"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-2"
  peer_transit_gateway_id = module.tgw_deployment_london[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_london_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.london)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_london) ? 1 : 0
  provider = aws.london

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_london[0].id

  tags = { Name = "london_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: MUMBAI (AP-SOUTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_mumbai" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_mumbai) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_mumbai"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-south-1"
  peer_transit_gateway_id = module.tgw_deployment_mumbai[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_mumbai_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_mumbai) ? 1 : 0
  provider = aws.mumbai

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_mumbai[0].id

  tags = { Name = "mumbai_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_n_california" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_n_california) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_n_california"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-1"
  peer_transit_gateway_id = module.tgw_deployment_n_california[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_n_california_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_n_california) ? 1 : 0
  provider = aws.n_california

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_n_california[0].id

  tags = { Name = "n_california_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_n_virginia) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_ohio) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_ohio[0].id

  tags = { Name = "ohio_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_oregon) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_oregon[0].id

  tags = { Name = "oregon_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_osaka) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_osaka[0].id

  tags = { Name = "osaka_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_paris) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_paris[0].id

  tags = { Name = "paris_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_seoul) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_seoul[0].id

  tags = { Name = "seoul_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_singapore) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_singapore[0].id

  tags = { Name = "singapore_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_stockholm) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_stockholm[0].id

  tags = { Name = "stockholm_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_sydney) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_sydney[0].id

  tags = { Name = "sydney_to_ireland" }
}

# REQUESTER REGION: IRELAND (EU-WEST-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ireland_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_tokyo) ? 1 : 0
  providers = { aws = aws.ireland }

  name = "ireland_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_ireland[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ireland_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ireland && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ireland_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_ireland_to_tokyo[0].id

  tags = { Name = "tokyo_to_ireland" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: MUMBAI (AP-SOUTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_mumbai" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_mumbai) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_mumbai"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-south-1"
  peer_transit_gateway_id = module.tgw_deployment_mumbai[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_mumbai_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.mumbai)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_mumbai) ? 1 : 0
  provider = aws.mumbai

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_mumbai[0].id

  tags = { Name = "mumbai_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_n_california" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_n_california) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_n_california"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-1"
  peer_transit_gateway_id = module.tgw_deployment_n_california[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_n_california_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_n_california) ? 1 : 0
  provider = aws.n_california

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_n_california[0].id

  tags = { Name = "n_california_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_n_virginia) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_ohio) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_ohio[0].id

  tags = { Name = "ohio_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_oregon) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_oregon[0].id

  tags = { Name = "oregon_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_osaka) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_osaka[0].id

  tags = { Name = "osaka_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_paris) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_paris[0].id

  tags = { Name = "paris_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_seoul) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_seoul[0].id

  tags = { Name = "seoul_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_singapore) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_singapore[0].id

  tags = { Name = "singapore_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_stockholm) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_stockholm[0].id

  tags = { Name = "stockholm_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_sydney) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_sydney[0].id

  tags = { Name = "sydney_to_london" }
}

# REQUESTER REGION: LONDON (EU-WEST-2)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_london_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_tokyo) ? 1 : 0
  providers = { aws = aws.london }

  name = "london_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_london[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_london_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.london && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.london_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_london_to_tokyo[0].id

  tags = { Name = "tokyo_to_london" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: N_CALIFORNIA (US-WEST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_n_california" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_n_california) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_n_california"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-1"
  peer_transit_gateway_id = module.tgw_deployment_n_california[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_n_california_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.n_california)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_n_california) ? 1 : 0
  provider = aws.n_california

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_n_california[0].id

  tags = { Name = "n_california_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_n_virginia) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_ohio) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_ohio[0].id

  tags = { Name = "ohio_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_oregon) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_oregon[0].id

  tags = { Name = "oregon_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_osaka) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_osaka[0].id

  tags = { Name = "osaka_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_paris) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_paris[0].id

  tags = { Name = "paris_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_seoul) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_seoul[0].id

  tags = { Name = "seoul_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_singapore) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_singapore[0].id

  tags = { Name = "singapore_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_stockholm) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_stockholm[0].id

  tags = { Name = "stockholm_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_sydney) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_sydney[0].id

  tags = { Name = "sydney_to_mumbai" }
}

# REQUESTER REGION: MUMBAI (AP-SOUTH-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_mumbai_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_tokyo) ? 1 : 0
  providers = { aws = aws.mumbai }

  name = "mumbai_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_mumbai[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_mumbai_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.mumbai && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.mumbai_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_mumbai_to_tokyo[0].id

  tags = { Name = "tokyo_to_mumbai" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: N_VIRGINIA (US-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_n_virginia" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_n_virginia) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_n_virginia"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-1"
  peer_transit_gateway_id = module.tgw_deployment_n_virginia[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_n_virginia_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.n_virginia)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_n_virginia) ? 1 : 0
  provider = aws.n_virginia

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_n_virginia[0].id

  tags = { Name = "n_virginia_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_ohio) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_ohio[0].id

  tags = { Name = "ohio_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_oregon) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_oregon[0].id

  tags = { Name = "oregon_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_osaka) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_osaka[0].id

  tags = { Name = "osaka_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_paris) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_paris[0].id

  tags = { Name = "paris_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_seoul) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_seoul[0].id

  tags = { Name = "seoul_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_singapore) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_singapore[0].id

  tags = { Name = "singapore_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_stockholm) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_stockholm[0].id

  tags = { Name = "stockholm_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_sydney) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_sydney[0].id

  tags = { Name = "sydney_to_n_california" }
}

# REQUESTER REGION: N_CALIFORNIA (US-WEST-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_california_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_tokyo) ? 1 : 0
  providers = { aws = aws.n_california }

  name = "n_california_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_n_california[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_california_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_california && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_california_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_n_california_to_tokyo[0].id

  tags = { Name = "tokyo_to_n_california" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: OHIO (US-EAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_ohio" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_ohio) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_ohio"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-east-2"
  peer_transit_gateway_id = module.tgw_deployment_ohio[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_ohio_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.ohio)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_ohio) ? 1 : 0
  provider = aws.ohio

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_ohio[0].id

  tags = { Name = "ohio_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_oregon) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_oregon[0].id

  tags = { Name = "oregon_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_osaka) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_osaka[0].id

  tags = { Name = "osaka_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_paris) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_paris[0].id

  tags = { Name = "paris_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_seoul) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_seoul[0].id

  tags = { Name = "seoul_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_singapore) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_singapore[0].id

  tags = { Name = "singapore_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_stockholm) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_stockholm[0].id

  tags = { Name = "stockholm_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_sydney) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_sydney[0].id

  tags = { Name = "sydney_to_n_virginia" }
}

# REQUESTER REGION: N_VIRGINIA (US-EAST-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_n_virginia_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_tokyo) ? 1 : 0
  providers = { aws = aws.n_virginia }

  name = "n_virginia_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_n_virginia[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_n_virginia_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.n_virginia && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.n_virginia_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_n_virginia_to_tokyo[0].id

  tags = { Name = "tokyo_to_n_virginia" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: OREGON (US-WEST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_oregon" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_oregon) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_oregon"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "us-west-2"
  peer_transit_gateway_id = module.tgw_deployment_oregon[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_oregon_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.oregon)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_oregon) ? 1 : 0
  provider = aws.oregon

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_oregon[0].id

  tags = { Name = "oregon_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_osaka) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_osaka[0].id

  tags = { Name = "osaka_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_paris) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_paris[0].id

  tags = { Name = "paris_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_seoul) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_seoul[0].id

  tags = { Name = "seoul_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_singapore) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_singapore[0].id

  tags = { Name = "singapore_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_stockholm) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_stockholm[0].id

  tags = { Name = "stockholm_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_sydney) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_sydney[0].id

  tags = { Name = "sydney_to_ohio" }
}

# REQUESTER REGION: OHIO (US-EAST-2)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_ohio_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_tokyo) ? 1 : 0
  providers = { aws = aws.ohio }

  name = "ohio_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_ohio[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_ohio_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.ohio && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.ohio_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_ohio_to_tokyo[0].id

  tags = { Name = "tokyo_to_ohio" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: OSAKA (AP-NORTHEAST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_osaka" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_osaka) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_osaka"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-3"
  peer_transit_gateway_id = module.tgw_deployment_osaka[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_osaka_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.osaka)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_osaka) ? 1 : 0
  provider = aws.osaka

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_osaka[0].id

  tags = { Name = "osaka_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_paris) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_paris[0].id

  tags = { Name = "paris_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_seoul) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_seoul[0].id

  tags = { Name = "seoul_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_singapore) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_singapore[0].id

  tags = { Name = "singapore_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_stockholm) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_stockholm[0].id

  tags = { Name = "stockholm_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_sydney) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_sydney[0].id

  tags = { Name = "sydney_to_oregon" }
}

# REQUESTER REGION: OREGON (US-WEST-2)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_oregon_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_tokyo) ? 1 : 0
  providers = { aws = aws.oregon }

  name = "oregon_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_oregon[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_oregon_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.oregon && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.oregon_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_oregon_to_tokyo[0].id

  tags = { Name = "tokyo_to_oregon" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: PARIS (EU-WEST-3)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_paris" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_paris) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_paris"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-west-3"
  peer_transit_gateway_id = module.tgw_deployment_paris[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_paris_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.paris)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_paris) ? 1 : 0
  provider = aws.paris

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_paris[0].id

  tags = { Name = "paris_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_seoul) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_seoul[0].id

  tags = { Name = "seoul_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_singapore) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_singapore[0].id

  tags = { Name = "singapore_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_stockholm) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_stockholm[0].id

  tags = { Name = "stockholm_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_sydney) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_sydney[0].id

  tags = { Name = "sydney_to_osaka" }
}

# REQUESTER REGION: OSAKA (AP-NORTHEAST-3)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_osaka_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_tokyo) ? 1 : 0
  providers = { aws = aws.osaka }

  name = "osaka_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_osaka[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_osaka_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.osaka && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.osaka_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_osaka_to_tokyo[0].id

  tags = { Name = "tokyo_to_osaka" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: SAO_PAULO (SA-EAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_sao_paulo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_sao_paulo) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_sao_paulo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "sa-east-1"
  peer_transit_gateway_id = module.tgw_deployment_sao_paulo[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_sao_paulo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.sao_paulo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_sao_paulo) ? 1 : 0
  provider = aws.sao_paulo

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_sao_paulo[0].id

  tags = { Name = "sao_paulo_to_paris" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_seoul) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_seoul[0].id

  tags = { Name = "seoul_to_paris" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_singapore) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_singapore[0].id

  tags = { Name = "singapore_to_paris" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_stockholm) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_stockholm[0].id

  tags = { Name = "stockholm_to_paris" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_sydney) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_sydney[0].id

  tags = { Name = "sydney_to_paris" }
}

# REQUESTER REGION: PARIS (EU-WEST-3)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_paris_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_tokyo) ? 1 : 0
  providers = { aws = aws.paris }

  name = "paris_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_paris[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_paris_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.paris && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.paris_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_paris_to_tokyo[0].id

  tags = { Name = "tokyo_to_paris" }
}

# REQUESTER REGION: SAO_PAULO (SA-EAST-1)
# ACCEPTER REGION: SEOUL (AP-NORTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sao_paulo_to_seoul" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_seoul) ? 1 : 0
  providers = { aws = aws.sao_paulo }

  name = "sao_paulo_to_seoul"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-2"
  peer_transit_gateway_id = module.tgw_deployment_seoul[0].id
  transit_gateway_id      = module.tgw_deployment_sao_paulo[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sao_paulo_to_seoul_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.seoul)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_seoul) ? 1 : 0
  provider = aws.seoul

  transit_gateway_attachment_id = module.tgw_peering_regions_sao_paulo_to_seoul[0].id

  tags = { Name = "seoul_to_sao_paulo" }
}

# REQUESTER REGION: SAO_PAULO (SA-EAST-1)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sao_paulo_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_singapore) ? 1 : 0
  providers = { aws = aws.sao_paulo }

  name = "sao_paulo_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_sao_paulo[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sao_paulo_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_sao_paulo_to_singapore[0].id

  tags = { Name = "singapore_to_sao_paulo" }
}

# REQUESTER REGION: SAO_PAULO (SA-EAST-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sao_paulo_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_stockholm) ? 1 : 0
  providers = { aws = aws.sao_paulo }

  name = "sao_paulo_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_sao_paulo[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sao_paulo_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_sao_paulo_to_stockholm[0].id

  tags = { Name = "stockholm_to_sao_paulo" }
}

# REQUESTER REGION: SAO_PAULO (SA-EAST-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sao_paulo_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_sydney) ? 1 : 0
  providers = { aws = aws.sao_paulo }

  name = "sao_paulo_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_sao_paulo[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sao_paulo_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_sao_paulo_to_sydney[0].id

  tags = { Name = "sydney_to_sao_paulo" }
}

# REQUESTER REGION: SAO_PAULO (SA-EAST-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sao_paulo_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_tokyo) ? 1 : 0
  providers = { aws = aws.sao_paulo }

  name = "sao_paulo_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_sao_paulo[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sao_paulo_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sao_paulo && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sao_paulo_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_sao_paulo_to_tokyo[0].id

  tags = { Name = "tokyo_to_sao_paulo" }
}

# REQUESTER REGION: SEOUL (AP-NORTHEAST-2)
# ACCEPTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_seoul_to_singapore" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_singapore) ? 1 : 0
  providers = { aws = aws.seoul }

  name = "seoul_to_singapore"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-1"
  peer_transit_gateway_id = module.tgw_deployment_singapore[0].id
  transit_gateway_id      = module.tgw_deployment_seoul[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_seoul_to_singapore_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.singapore)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_singapore) ? 1 : 0
  provider = aws.singapore

  transit_gateway_attachment_id = module.tgw_peering_regions_seoul_to_singapore[0].id

  tags = { Name = "singapore_to_seoul" }
}

# REQUESTER REGION: SEOUL (AP-NORTHEAST-2)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_seoul_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_stockholm) ? 1 : 0
  providers = { aws = aws.seoul }

  name = "seoul_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_seoul[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_seoul_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_seoul_to_stockholm[0].id

  tags = { Name = "stockholm_to_seoul" }
}

# REQUESTER REGION: SEOUL (AP-NORTHEAST-2)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_seoul_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_sydney) ? 1 : 0
  providers = { aws = aws.seoul }

  name = "seoul_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_seoul[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_seoul_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_seoul_to_sydney[0].id

  tags = { Name = "sydney_to_seoul" }
}

# REQUESTER REGION: SEOUL (AP-NORTHEAST-2)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_seoul_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_tokyo) ? 1 : 0
  providers = { aws = aws.seoul }

  name = "seoul_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_seoul[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_seoul_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.seoul && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.seoul_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_seoul_to_tokyo[0].id

  tags = { Name = "tokyo_to_seoul" }
}

# REQUESTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ACCEPTER REGION: STOCKHOLM (EU-NORTH-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_singapore_to_stockholm" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_stockholm) ? 1 : 0
  providers = { aws = aws.singapore }

  name = "singapore_to_stockholm"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "eu-north-1"
  peer_transit_gateway_id = module.tgw_deployment_stockholm[0].id
  transit_gateway_id      = module.tgw_deployment_singapore[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_singapore_to_stockholm_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.stockholm)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_stockholm) ? 1 : 0
  provider = aws.stockholm

  transit_gateway_attachment_id = module.tgw_peering_regions_singapore_to_stockholm[0].id

  tags = { Name = "stockholm_to_singapore" }
}

# REQUESTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_singapore_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_sydney) ? 1 : 0
  providers = { aws = aws.singapore }

  name = "singapore_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_singapore[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_singapore_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_singapore_to_sydney[0].id

  tags = { Name = "sydney_to_singapore" }
}

# REQUESTER REGION: SINGAPORE (AP-SOUTHEAST-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_singapore_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_tokyo) ? 1 : 0
  providers = { aws = aws.singapore }

  name = "singapore_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_singapore[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_singapore_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.singapore && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.singapore_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_singapore_to_tokyo[0].id

  tags = { Name = "tokyo_to_singapore" }
}

# REQUESTER REGION: STOCKHOLM (EU-NORTH-1)
# ACCEPTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_stockholm_to_sydney" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.stockholm && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.stockholm_to_sydney) ? 1 : 0
  providers = { aws = aws.stockholm }

  name = "stockholm_to_sydney"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-southeast-2"
  peer_transit_gateway_id = module.tgw_deployment_sydney[0].id
  transit_gateway_id      = module.tgw_deployment_stockholm[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_stockholm_to_sydney_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.stockholm && var.deploy_in_region.sydney)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.stockholm_to_sydney) ? 1 : 0
  provider = aws.sydney

  transit_gateway_attachment_id = module.tgw_peering_regions_stockholm_to_sydney[0].id

  tags = { Name = "sydney_to_stockholm" }
}

# REQUESTER REGION: STOCKHOLM (EU-NORTH-1)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_stockholm_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.stockholm && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.stockholm_to_tokyo) ? 1 : 0
  providers = { aws = aws.stockholm }

  name = "stockholm_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_stockholm[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_stockholm_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.stockholm && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.stockholm_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_stockholm_to_tokyo[0].id

  tags = { Name = "tokyo_to_stockholm" }
}

# REQUESTER REGION: SYDNEY (AP-SOUTHEAST-2)
# ACCEPTER REGION: TOKYO (AP-NORTHEAST-1)
# ------------------------------------------------------------------------------
module "tgw_peering_regions_sydney_to_tokyo" {
  source    = "./modules/transit_gateway_peering"
  count     = (var.deploy_in_region.all_regions || (var.deploy_in_region.sydney && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sydney_to_tokyo) ? 1 : 0
  providers = { aws = aws.sydney }

  name = "sydney_to_tokyo"

  peer_account_id         = data.aws_caller_identity.this.account_id
  peer_region             = "ap-northeast-1"
  peer_transit_gateway_id = module.tgw_deployment_tokyo[0].id
  transit_gateway_id      = module.tgw_deployment_sydney[0].id

  tags = local.default_tags
}

resource "aws_ec2_transit_gateway_peering_attachment_accepter" "tgw_peering_regions_sydney_to_tokyo_accepter" {
  count    = (var.deploy_in_region.all_regions || (var.deploy_in_region.sydney && var.deploy_in_region.tokyo)) && (var.transit_gateway_peering.full_mesh || var.transit_gateway_peering.sydney_to_tokyo) ? 1 : 0
  provider = aws.tokyo

  transit_gateway_attachment_id = module.tgw_peering_regions_sydney_to_tokyo[0].id

  tags = { Name = "tokyo_to_sydney" }
}
